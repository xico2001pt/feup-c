myClass {
	.construct myClass().V{
		invokespecial(this, "<init>").V;
	}
	
	.methodpublic mult(num.i32, times.i32).i32 {
		sum.i32 :=.i32 0.i32;
		i.i32 :=.i32 0.i32;
		
		Loop:
			if ($2.times.i32 <.bool i.i32) goto End;
			sum.i32 :=.i32 sum.i32 +.i32 $1.num.i32;
            i.i32 :=.i32 i.i32 +.i32 1.i32;
			goto Loop;
		End:
			ret.i32 sum.i32;
	}

    .method public static main(args.array.String).V {
		aux1.myClass :=.myClass new(myClass).myClass;
		invokespecial(aux1.myClass, "<init>").V;
		aux2.i32 :=.i32 invokevirtual(aux1.myClass, "mult", 10.i32, 5.i32).i32;
		invokestatic(io, "println", aux2.i32).V;
	}
}